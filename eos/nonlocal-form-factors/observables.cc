/* vim: set sw=4 sts=4 et tw=150 foldmethod=marker : */

/*
 * Copyright (c) 2023 MÃ©ril Reboud
 *
 * This file is part of the EOS project. EOS is free software;
 * you can redistribute it and/or modify it under the terms of the GNU General
 * Public License version 2, as published by the Free Software Foundation.
 *
 * EOS is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place, Suite 330, Boston, MA  02111-1307  USA
 */

#include <eos/observable-impl.hh>
#include <eos/nonlocal-form-factors/charm-loops.hh>
#include <eos/nonlocal-form-factors/nonlocal-formfactors.hh>
#include <eos/utils/concrete-cacheable-observable.hh>
#include <eos/utils/concrete_observable.hh>

namespace eos
{
    // B_q -> P
    // {{{
    ObservableGroup
    make_b_to_p_group()
    {
        auto imp = new Implementation<ObservableGroup>(
            R"(Observables in $B_q \to P$ decays)",
            R"(The option "q" selects the spectator quark flavor.)",
            {
                make_observable("B->K::re_H_plus(q2)", R"(\mathrm{Re}\mathcal{H}_0^{B \to K}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::re_H_plus,
                        std::make_tuple("q2")),
                make_observable("B->K::im_H_plus(q2)", R"(\mathrm{Im}\mathcal{H}_0^{B \to K}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::im_H_plus,
                        std::make_tuple("q2")),
                make_observable("B->K::abs_H_plus(q2)", R"(|\mathcal{H}_0^{B \to K}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::abs_H_plus,
                        std::make_tuple("q2")),
                make_observable("B->K::re_Hhat_plus(q2)",  R"(\mathrm{Re}\hat{\mathcal{H}}_0^{B \to K}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::re_Hhat_plus,
                        std::make_tuple("q2")),
                make_observable("B->K::im_Hhat_plus(q2)",  R"(\mathrm{Im}\hat{\mathcal{H}}_0^{B \to K}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::im_Hhat_plus,
                        std::make_tuple("q2")),
                make_observable("B->K::abs_Hhat_plus(q2)",  R"(|\hat{\mathcal{H}}_0^{B \to K}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::abs_Hhat_plus,
                        std::make_tuple("q2")),

                make_observable("B->K::abs_ratio_plus(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::abs_ratio_plus,
                        std::make_tuple("q2")),
                make_observable("B->K::abs_P_ratio_plus(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::abs_P_ratio_plus,
                        std::make_tuple("q2")),
                make_observable("B->K::re_ratio_plus(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::re_ratio_plus,
                        std::make_tuple("q2")),
                make_observable("B->K::im_ratio_plus(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::im_ratio_plus,
                        std::make_tuple("q2")),

                make_observable("B->K::re_ratio_plus(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::re_ratio_plus_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B->K::im_ratio_plus(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::im_ratio_plus_complex,
                        std::make_tuple("q2_real", "q2_imag")),

                make_observable("B->K::re_F_ratio_plus(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::re_F_ratio_plus_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B->K::im_F_ratio_plus(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::im_F_ratio_plus_complex,
                        std::make_tuple("q2_real", "q2_imag")),

                make_observable("B->K::real_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::get_real_alpha,
                        std::make_tuple("i")),
                make_observable("B->K::imag_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::get_imag_alpha,
                        std::make_tuple("i")),
                make_observable("B->K::strong_bound",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::strong_bound,
                        std::make_tuple()),
                make_observable("B->K::weak_bound",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::weak_bound,
                        std::make_tuple()),
                make_observable("B->K::weak_bound_log_likelihood",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::weak_bound_log_likelihood,
                        std::make_tuple()),
                make_observable("B->K::strong_bound_log_likelihood",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::strong_bound_log_likelihood,
                        std::make_tuple()),
            }

        );

        return ObservableGroup(imp);
    }
    // }}}


    // B_q -> V
    // {{{
    ObservableGroup
    make_b_to_v_group()
    {
        auto imp = new Implementation<ObservableGroup>(
            R"(Observables in $B_q \to V$ decays)",
            R"(The option "q" selects the spectator quark flavor.)",
            {
                make_observable("B->K^*::re_H_perp(q2)",  R"(\mathrm{Re}\mathcal{H}_\perp^{B \to K^*}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_H_perp,
                        std::make_tuple("q2")),
                make_observable("B->K^*::im_H_perp(q2)",  R"(\mathrm{Im}\mathcal{H}_\perp^{B \to K^*}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_H_perp,
                        std::make_tuple("q2")),
                make_observable("B->K^*::abs_H_perp(q2)",  R"(|\mathcal{H}_\perp^{B \to K^*}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::abs_H_perp,
                        std::make_tuple("q2")),
                make_observable("B->K^*::re_Hhat_perp(q2)",  R"(\mathrm{Re}\hat{\mathcal{H}}_\perp^{B \to K^*}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_Hhat_perp,
                        std::make_tuple("q2")),
                make_observable("B->K^*::im_Hhat_perp(q2)",  R"(\mathrm{Im}\hat{\mathcal{H}}_\perp^{B \to K^*}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_Hhat_perp,
                        std::make_tuple("q2")),
                make_observable("B->K^*::abs_Hhat_perp(q2)",  R"(|\hat{\mathcal{H}}_\perp^{B \to K^*}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::abs_Hhat_perp,
                        std::make_tuple("q2")),

                make_observable("B->K^*::re_H_para(q2)",  R"(\mathrm{Re}\mathcal{H}_\parallel^{B \to K^*}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_H_para,
                        std::make_tuple("q2")),
                make_observable("B->K^*::im_H_para(q2)",  R"(\mathrm{Im}\mathcal{H}_\parallel^{B \to K^*}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_H_para,
                        std::make_tuple("q2")),
                make_observable("B->K^*::abs_H_para(q2)",  R"(|\mathcal{H}_\parallel^{B \to K^*}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::abs_H_para,
                        std::make_tuple("q2")),
                make_observable("B->K^*::re_Hhat_para(q2)",  R"(\mathrm{Re}\hat{\mathcal{H}}_\parallel^{B \to K^*}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_Hhat_para,
                        std::make_tuple("q2")),
                make_observable("B->K^*::im_Hhat_para(q2)",  R"(\mathrm{Im}\hat{\mathcal{H}}_\parallel^{B \to K^*}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_Hhat_para,
                        std::make_tuple("q2")),
                make_observable("B->K^*::abs_Hhat_para(q2)",  R"(|\hat{\mathcal{H}}_\parallel^{B \to K^*}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::abs_Hhat_para,
                        std::make_tuple("q2")),

                make_observable("B->K^*::re_H_long(q2)",  R"(\mathrm{Re}\mathcal{H}_0^{B \to K^*}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_H_long,
                        std::make_tuple("q2")),
                make_observable("B->K^*::im_H_long(q2)",  R"(\mathrm{Im}\mathcal{H}_0^{B \to K^*}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_H_long,
                        std::make_tuple("q2")),
                make_observable("B->K^*::abs_H_long(q2)",  R"(|\mathcal{H}_0^{B \to K^*}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::abs_H_long,
                        std::make_tuple("q2")),
                make_observable("B->K^*::re_Hhat_long(q2)",  R"(\mathrm{Re}\hat{\mathcal{H}}_0^{B \to K^*}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_Hhat_long,
                        std::make_tuple("q2")),
                make_observable("B->K^*::im_Hhat_long(q2)",  R"(\mathrm{Im}\hat{\mathcal{H}}_0^{B \to K^*}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_Hhat_long,
                        std::make_tuple("q2")),
                make_observable("B->K^*::abs_Hhat_long(q2)",  R"(|\hat{\mathcal{H}}_0^{B \to K^*}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::abs_Hhat_long,
                        std::make_tuple("q2")),

                make_observable("B->K^*::re_ratio_perp(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_ratio_perp,
                        std::make_tuple("q2")),
                make_observable("B->K^*::im_ratio_perp(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_ratio_perp,
                        std::make_tuple("q2")),
                make_observable("B->K^*::abs_ratio_perp(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::abs_ratio_perp,
                        std::make_tuple("q2")),
                make_observable("B->K^*::re_ratio_para(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_ratio_para,
                        std::make_tuple("q2")),
                make_observable("B->K^*::im_ratio_para(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_ratio_para,
                        std::make_tuple("q2")),
                make_observable("B->K^*::abs_ratio_para(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::abs_ratio_para,
                        std::make_tuple("q2")),
                make_observable("B->K^*::re_ratio_long(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_ratio_long,
                        std::make_tuple("q2")),
                make_observable("B->K^*::im_ratio_long(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_ratio_long,
                        std::make_tuple("q2")),
                make_observable("B->K^*::abs_ratio_long(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::abs_ratio_long,
                        std::make_tuple("q2")),

                make_observable("B->K^*::re_ratio_perp(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_ratio_perp_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B->K^*::im_ratio_perp(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_ratio_perp_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B->K^*::re_ratio_para(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_ratio_para_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B->K^*::im_ratio_para(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_ratio_para_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B->K^*::re_ratio_long(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_ratio_long_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B->K^*::im_ratio_long(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_ratio_long_complex,
                        std::make_tuple("q2_real", "q2_imag")),

                make_observable("B->K^*::re_F_ratio_perp(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_F_ratio_perp_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B->K^*::im_F_ratio_perp(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_F_ratio_perp_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B->K^*::re_F_ratio_para(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_F_ratio_para_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B->K^*::im_F_ratio_para(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_F_ratio_para_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B->K^*::re_F_ratio_long(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_F_ratio_long_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B->K^*::im_F_ratio_long(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::im_F_ratio_long_complex,
                        std::make_tuple("q2_real", "q2_imag")),

                make_observable("B->K^*::real_perp_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::get_real_perp_alpha,
                        std::make_tuple("i")),
                make_observable("B->K^*::imag_perp_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::get_imag_perp_alpha,
                        std::make_tuple("i")),
                make_observable("B->K^*::real_para_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::get_real_para_alpha,
                        std::make_tuple("i")),
                make_observable("B->K^*::imag_para_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::get_imag_para_alpha,
                        std::make_tuple("i")),
                make_observable("B->K^*::real_long_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::get_real_long_alpha,
                        std::make_tuple("i")),
                make_observable("B->K^*::imag_long_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::get_imag_long_alpha,
                        std::make_tuple("i")),
                make_observable("B->K^*::strong_bound",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::strong_bound,
                        std::make_tuple()),
                make_observable("B->K^*::weak_bound",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::weak_bound,
                        std::make_tuple()),
                make_observable("B->K^*::weak_bound_log_likelihood",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::weak_bound_log_likelihood,
                        std::make_tuple()),
                make_observable("B->K^*::strong_bound_log_likelihood",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::strong_bound_log_likelihood,
                        std::make_tuple()),


                make_observable("B_s->phi::re_H_perp(q2)", R"(\mathrm{Re}\mathcal{H}_\perp^{B_s \to \phi}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::re_H_perp,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::im_H_perp(q2)", R"(\mathrm{Im}\mathcal{H}_\perp^{B_s \to \phi}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::im_H_perp,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::abs_H_perp(q2)", R"(|\mathcal{H}_\perp^{B_s \to \phi}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::abs_H_perp,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::abs_Hhat_perp(q2)", R"(|\hat{\mathcal{H}}_\perp^{B_s \to \phi}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::abs_Hhat_perp,
                        std::make_tuple("q2")),

                make_observable("B_s->phi::re_H_para(q2)", R"(\mathrm{Re}\mathcal{H}_\parallel^{B_s \to \phi}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::re_H_para,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::im_H_para(q2)", R"(\mathrm{Im}\mathcal{H}_\parallel^{B_s \to \phi}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::im_H_para,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::abs_H_para(q2)", R"(|\mathcal{H}_\parallel^{B_s \to \phi}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::abs_H_para,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::abs_Hhat_para(q2)", R"(|\hat{\mathcal{H}}_\parallel^{B_s \to \phi}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::abs_Hhat_para,
                        std::make_tuple("q2")),

                make_observable("B_s->phi::re_H_long(q2)", R"(\mathrm{Re}\mathcal{H}_0^{B_s \to \phi}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::re_H_long,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::im_H_long(q2)", R"(\mathrm{Im}\mathcal{H}_0^{B_s \to \phi}(q^2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::im_H_long,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::abs_H_long(q2)", R"(|\mathcal{H}_0^{B_s \to \phi}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::abs_H_long,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::abs_Hhat_long(q2)", R"(|\hat{\mathcal{H}}_0^{B_s \to \phi}(q^2)|)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::abs_Hhat_long,
                        std::make_tuple("q2")),

                make_observable("B_s->phi::re_ratio_perp(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::re_ratio_perp,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::im_ratio_perp(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::im_ratio_perp,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::abs_ratio_perp(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::abs_ratio_perp,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::re_ratio_para(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::re_ratio_para,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::im_ratio_para(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::im_ratio_para,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::abs_ratio_para(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::abs_ratio_para,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::re_ratio_long(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::re_ratio_long,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::im_ratio_long(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::im_ratio_long,
                        std::make_tuple("q2")),
                make_observable("B_s->phi::abs_ratio_long(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::abs_ratio_long,
                        std::make_tuple("q2")),

                make_observable("B_s->phi::re_ratio_perp(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::re_ratio_perp_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B_s->phi::im_ratio_perp(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::im_ratio_perp_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B_s->phi::re_ratio_para(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::re_ratio_para_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B_s->phi::im_ratio_para(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::im_ratio_para_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B_s->phi::re_ratio_long(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::re_ratio_long_complex,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("B_s->phi::im_ratio_long(Re(q2),Im(q2))",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::im_ratio_long_complex,
                        std::make_tuple("q2_real", "q2_imag")),

                make_observable("B_s->phi::real_perp_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::get_real_perp_alpha,
                        std::make_tuple("i")),
                make_observable("B_s->phi::imag_perp_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::get_imag_perp_alpha,
                        std::make_tuple("i")),
                make_observable("B_s->phi::real_para_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::get_real_para_alpha,
                        std::make_tuple("i")),
                make_observable("B_s->phi::imag_para_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::get_imag_para_alpha,
                        std::make_tuple("i")),
                make_observable("B_s->phi::real_long_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::get_real_long_alpha,
                        std::make_tuple("i")),
                make_observable("B_s->phi::imag_long_alpha",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::get_imag_long_alpha,
                        std::make_tuple("i")),
                make_observable("B_s->phi::strong_bound",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::strong_bound,
                        std::make_tuple()),
                make_observable("B_s->phi::weak_bound",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::weak_bound,
                        std::make_tuple()),
                make_observable("B_s->phi::weak_bound_log_likelihood",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::weak_bound_log_likelihood,
                        std::make_tuple()),
                make_observable("B_s->phi::strong_bound_log_likelihood",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BsToPhi, nff::PToV>::strong_bound_log_likelihood,
                        std::make_tuple()),
            }

        );

        return ObservableGroup(imp);
    }
    // }}}


    // Pseudo-observables for Non-local Matrix Elements
    // {{{
    ObservableGroup
    make_b_to_s_nonlocal_group()
    {
        auto imp = new Implementation<ObservableGroup>(
            "Pseudo-observables for Non-local Matrix Elements",
            "",
            {
                // Charm Loops
                make_observable("b->s::re_F17(Re(q2),Im(q2))", Unit::None(),
                        &CharmLoopsAdapter::real_F17,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("b->s::im_F17(Re(q2),Im(q2))", Unit::None(),
                        &CharmLoopsAdapter::imag_F17,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("b->s::re_F19(Re(q2),Im(q2))", Unit::None(),
                        &CharmLoopsAdapter::real_F19,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("b->s::im_F19(Re(q2),Im(q2))", Unit::None(),
                        &CharmLoopsAdapter::imag_F19,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("b->s::re_F27(Re(q2),Im(q2))", Unit::None(),
                        &CharmLoopsAdapter::real_F27,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("b->s::im_F27(Re(q2),Im(q2))", Unit::None(),
                        &CharmLoopsAdapter::imag_F27,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("b->s::re_F29(Re(q2),Im(q2))", Unit::None(),
                        &CharmLoopsAdapter::real_F29,
                        std::make_tuple("q2_real", "q2_imag")),
                make_observable("b->s::im_F29(Re(q2),Im(q2))", Unit::None(),
                        &CharmLoopsAdapter::imag_F29,
                        std::make_tuple("q2_real", "q2_imag")),

                // B->K
                make_observable("B->Kgamma^*::Re{H_+}(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::re_H_plus,
                        std::make_tuple("q2")),

                // auxiliary variables, e.g. for determining the B-LCSR threshold parameters
                make_observable("B->Kgamma^*::Re{H_+}[s^1/s^0](q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToK, nff::PToP>::re_normalized_moment_A,
                        std::make_tuple("q2")),

                // B->K^*
                make_observable("B->K^*gamma^*::Re{H_perp}(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_H_perp,
                        std::make_tuple("q2")),

                make_observable("B->K^*gamma^*::Re{H_para}(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_H_para,
                        std::make_tuple("q2")),

                make_observable("B->K^*gamma^*::Re{H_long}(q2)",
                        Unit::None(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_H_long,
                        std::make_tuple("q2")),

                // auxiliary variables, e.g. for determining the B-LCSR threshold parameters
                make_observable("B->K^*gamma^*::Re{H_1}[s^1/s^0](q2)",
                        Unit::GeV2(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_normalized_moment_V1,
                        std::make_tuple("q2")),

                make_observable("B->K^*gamma^*::Re{H_2}[s^1/s^0](q2)",
                        Unit::GeV2(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_normalized_moment_V2,
                        std::make_tuple("q2")),

                make_observable("B->K^*gamma^*::Re{H_23}[s^1/s^0](q2)",
                        Unit::GeV2(),
                        &NonlocalFormFactorObservable<nff::BToKstar, nff::PToV>::re_normalized_moment_V23,
                        std::make_tuple("q2")),
            }
        );

        return ObservableGroup(imp);
    }
    // }}}


    ObservableSection
    make_nonlocal_form_factors_section()
    {
        auto imp = new Implementation<ObservableSection>(
            "Pseudo-observables for the non-local form factors",
            "",
            {
                // B_q -> M
                make_b_to_p_group(),
                make_b_to_v_group(),

                // Pseudo-observables for Non-local Matrix Elements
                make_b_to_s_nonlocal_group(),
            }
        );

        return ObservableSection(imp);
    }
}
